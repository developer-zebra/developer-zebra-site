<Type Name="ScannerConfig+ReaderParameters+ReaderSpecifics+ImagerSpecifics" FullName="Symbol.XamarinEMDK.Barcode.ScannerConfig+ReaderParameters+ReaderSpecifics+ImagerSpecifics">
  <TypeSignature Language="C#" Value="public class ScannerConfig.ReaderParameters.ReaderSpecifics.ImagerSpecifics : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit ScannerConfig/ReaderParameters/ReaderSpecifics/ImagerSpecifics extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Symbol.XamarinEMDK</AssemblyName>
    <AssemblyVersion>1.0.3.0</AssemblyVersion>
    <AssemblyVersion>1.0.3.1</AssemblyVersion>
    <AssemblyVersion>1.0.3.2</AssemblyVersion>
    <AssemblyVersion>2.0.0.1</AssemblyVersion>
    <AssemblyVersion>2.1.0.4</AssemblyVersion>
    <AssemblyVersion>2.1.0.5</AssemblyVersion>
    <AssemblyVersion>2.4.0.87</AssemblyVersion>
    <AssemblyVersion>2.5.0.41</AssemblyVersion>
    <AssemblyVersion>2.5.0.48</AssemblyVersion>
    <AssemblyVersion>2.6.0.69</AssemblyVersion>
    <AssemblyVersion>2.7.0.76</AssemblyVersion>
    <AssemblyVersion>3.0.0.41</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("com/symbol/emdk/barcode/ScannerConfig$ReaderParams$ReaderSpecific$ImagerSpecific", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>ImagerSpecific provides access to the imager specific parameters.</summary>
    <remarks>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ImagerSpecifics (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
        <AssemblyVersion>1.0.3.1</AssemblyVersion>
        <AssemblyVersion>1.0.3.2</AssemblyVersion>
        <AssemblyVersion>2.0.0.1</AssemblyVersion>
        <AssemblyVersion>2.1.0.4</AssemblyVersion>
        <AssemblyVersion>2.1.0.5</AssemblyVersion>
        <AssemblyVersion>2.4.0.87</AssemblyVersion>
        <AssemblyVersion>2.5.0.41</AssemblyVersion>
        <AssemblyVersion>2.5.0.48</AssemblyVersion>
        <AssemblyVersion>2.6.0.69</AssemblyVersion>
        <AssemblyVersion>2.7.0.76</AssemblyVersion>
        <AssemblyVersion>3.0.0.41</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">
        </param>
        <param name="transfer">
        </param>
        <summary>
        </summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AimingPattern">
      <MemberSignature Language="C#" Value="public Symbol.XamarinEMDK.Barcode.ScannerConfig.AimingPattern AimingPattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Symbol.XamarinEMDK.Barcode.ScannerConfig/AimingPattern AimingPattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.1</AssemblyVersion>
        <AssemblyVersion>2.1.0.4</AssemblyVersion>
        <AssemblyVersion>2.1.0.5</AssemblyVersion>
        <AssemblyVersion>2.4.0.87</AssemblyVersion>
        <AssemblyVersion>2.5.0.41</AssemblyVersion>
        <AssemblyVersion>2.5.0.48</AssemblyVersion>
        <AssemblyVersion>2.6.0.69</AssemblyVersion>
        <AssemblyVersion>2.7.0.76</AssemblyVersion>
        <AssemblyVersion>3.0.0.41</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("aimingPattern")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Symbol.XamarinEMDK.Barcode.ScannerConfig+AimingPattern</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Type of aiming pattern to be used for barcode scanning.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AimTimer">
      <MemberSignature Language="C#" Value="public int AimTimer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AimTimer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.4.0.87</AssemblyVersion>
        <AssemblyVersion>2.5.0.41</AssemblyVersion>
        <AssemblyVersion>2.5.0.48</AssemblyVersion>
        <AssemblyVersion>2.6.0.69</AssemblyVersion>
        <AssemblyVersion>2.7.0.76</AssemblyVersion>
        <AssemblyVersion>3.0.0.41</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("aimTimer")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Duration in milliseconds for timed aim types ScannerConfig.AimType.TIMED_HOLD and ScannerConfig.AimType.TIMED_RELEASE. Note than this duration must be less than the beamTimer.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AimType">
      <MemberSignature Language="C#" Value="public Symbol.XamarinEMDK.Barcode.ScannerConfig.AimType AimType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Symbol.XamarinEMDK.Barcode.ScannerConfig/AimType AimType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.4.0.87</AssemblyVersion>
        <AssemblyVersion>2.5.0.41</AssemblyVersion>
        <AssemblyVersion>2.5.0.48</AssemblyVersion>
        <AssemblyVersion>2.6.0.69</AssemblyVersion>
        <AssemblyVersion>2.7.0.76</AssemblyVersion>
        <AssemblyVersion>3.0.0.41</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("aimType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Symbol.XamarinEMDK.Barcode.ScannerConfig+AimType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Describes the type of aiming to use.
Note: Setting aimType is recommended instead of ScannerConfig.ReaderParams.ReaderSpecific.ContinuousRead.isContinuousScan. If the application modifies ScannerConfig.ReaderParams.ReaderSpecific.ContinuousRead.isContinuousScan and aimType, the aimType settings will take precedence.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoCharacterSetFailureOption">
      <MemberSignature Language="C#" Value="public Symbol.XamarinEMDK.Barcode.ScannerConfig.AutoCharacterSetFailureOption AutoCharacterSetFailureOption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Symbol.XamarinEMDK.Barcode.ScannerConfig/AutoCharacterSetFailureOption AutoCharacterSetFailureOption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.41</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("autoCharacterSetFailureOption")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Symbol.XamarinEMDK.Barcode.ScannerConfig+AutoCharacterSetFailureOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoCharacterSetPreferredOrder">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Symbol.XamarinEMDK.Barcode.ScannerConfig.AutoCharacterSetPreference&gt; AutoCharacterSetPreferredOrder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Symbol.XamarinEMDK.Barcode.ScannerConfig/AutoCharacterSetPreference&gt; AutoCharacterSetPreferredOrder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.41</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("autoCharacterSetPreferredOrder")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Symbol.XamarinEMDK.Barcode.ScannerConfig+AutoCharacterSetPreference&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeamTimer">
      <MemberSignature Language="C#" Value="public int BeamTimer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BeamTimer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
        <AssemblyVersion>1.0.3.1</AssemblyVersion>
        <AssemblyVersion>1.0.3.2</AssemblyVersion>
        <AssemblyVersion>2.0.0.1</AssemblyVersion>
        <AssemblyVersion>2.1.0.4</AssemblyVersion>
        <AssemblyVersion>2.1.0.5</AssemblyVersion>
        <AssemblyVersion>2.4.0.87</AssemblyVersion>
        <AssemblyVersion>2.5.0.41</AssemblyVersion>
        <AssemblyVersion>2.5.0.48</AssemblyVersion>
        <AssemblyVersion>2.6.0.69</AssemblyVersion>
        <AssemblyVersion>2.7.0.76</AssemblyVersion>
        <AssemblyVersion>3.0.0.41</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("beamTimer")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Sets the maximum amount of time that the reader remains on (0 - 60,000 ms in increments of 100 ms). A value of 0 sets the reader to stay on indefinitely</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CharacterSetSelection">
      <MemberSignature Language="C#" Value="public Symbol.XamarinEMDK.Barcode.ScannerConfig.CharacterSet CharacterSetSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Symbol.XamarinEMDK.Barcode.ScannerConfig/CharacterSet CharacterSetSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.41</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("characterSetSelection")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Symbol.XamarinEMDK.Barcode.ScannerConfig+CharacterSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionIdleTime">
      <MemberSignature Language="C#" Value="public int ConnectionIdleTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionIdleTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
        <AssemblyVersion>1.0.3.1</AssemblyVersion>
        <AssemblyVersion>1.0.3.2</AssemblyVersion>
        <AssemblyVersion>2.0.0.1</AssemblyVersion>
        <AssemblyVersion>2.1.0.4</AssemblyVersion>
        <AssemblyVersion>2.1.0.5</AssemblyVersion>
        <AssemblyVersion>2.4.0.87</AssemblyVersion>
        <AssemblyVersion>2.5.0.41</AssemblyVersion>
        <AssemblyVersion>2.5.0.48</AssemblyVersion>
        <AssemblyVersion>2.6.0.69</AssemblyVersion>
        <AssemblyVersion>2.7.0.76</AssemblyVersion>
        <AssemblyVersion>3.0.0.41</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("connectionIdleTime")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This is the time (in seconds) when an external scanner is idle in a particular state (ScannerStates.IDLE to ScannerStates.WAITING) after which the connection between the terminal and the scanner is severed to conserve power. This is currently applicable to Bluetooth scanners only..</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinuousRead">
      <MemberSignature Language="C#" Value="public Symbol.XamarinEMDK.Barcode.ScannerConfig.ReaderParameters.ReaderSpecifics.ContinuousRead ContinuousRead { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Symbol.XamarinEMDK.Barcode.ScannerConfig/ReaderParameters/ReaderSpecifics/ContinuousRead ContinuousRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
        <AssemblyVersion>1.0.3.1</AssemblyVersion>
        <AssemblyVersion>1.0.3.2</AssemblyVersion>
        <AssemblyVersion>2.0.0.1</AssemblyVersion>
        <AssemblyVersion>2.1.0.4</AssemblyVersion>
        <AssemblyVersion>2.1.0.5</AssemblyVersion>
        <AssemblyVersion>2.4.0.87</AssemblyVersion>
        <AssemblyVersion>2.5.0.41</AssemblyVersion>
        <AssemblyVersion>2.5.0.48</AssemblyVersion>
        <AssemblyVersion>2.6.0.69</AssemblyVersion>
        <AssemblyVersion>2.7.0.76</AssemblyVersion>
        <AssemblyVersion>3.0.0.41</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("continuousRead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Symbol.XamarinEMDK.Barcode.ScannerConfig+ReaderParameters+ReaderSpecifics+ContinuousRead</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ContinuousRead class provides access to continuous scanning related parameters.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DifferentSymbolTimeout">
      <MemberSignature Language="C#" Value="public int DifferentSymbolTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DifferentSymbolTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.4.0.87</AssemblyVersion>
        <AssemblyVersion>2.5.0.41</AssemblyVersion>
        <AssemblyVersion>2.5.0.48</AssemblyVersion>
        <AssemblyVersion>2.6.0.69</AssemblyVersion>
        <AssemblyVersion>2.7.0.76</AssemblyVersion>
        <AssemblyVersion>3.0.0.41</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("differentSymbolTimeout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This setting is used to prevent the scanner from decoding another symbol within this time interval. This is applicable only for the aim type ScannerConfig.AimType.CONTINUOUS_READ. The user may want to prevent decoding too quickly and set an interval that the user can aim before decoding the next barcode. A value of 0 means no interval is required between two successive reads. Boundary values are 0 to 5000 in milliseconds in 500 increments such as 0, 500, 1000... etc
Note: If the application modifies ScannerConfig.ReaderParams.ReaderSpecific.ContinuousRead.differentSymbolTimeout and differentSymbolTimeout, the differentSymbolTimeout settings will take precedence.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DigimarcDecoding">
      <MemberSignature Language="C#" Value="public bool DigimarcDecoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DigimarcDecoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.41</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("digimarcDecoding")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisconnectOnExit">
      <MemberSignature Language="C#" Value="public bool DisconnectOnExit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisconnectOnExit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
        <AssemblyVersion>1.0.3.1</AssemblyVersion>
        <AssemblyVersion>1.0.3.2</AssemblyVersion>
        <AssemblyVersion>2.0.0.1</AssemblyVersion>
        <AssemblyVersion>2.1.0.4</AssemblyVersion>
        <AssemblyVersion>2.1.0.5</AssemblyVersion>
        <AssemblyVersion>2.4.0.87</AssemblyVersion>
        <AssemblyVersion>2.5.0.41</AssemblyVersion>
        <AssemblyVersion>2.5.0.48</AssemblyVersion>
        <AssemblyVersion>2.6.0.69</AssemblyVersion>
        <AssemblyVersion>2.7.0.76</AssemblyVersion>
        <AssemblyVersion>3.0.0.41</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("disconnectOnExit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This parameter indicates to the scan driver to disconnect any existing connection between an external Bluetooth scanner and the terminal. When a BT scanner establishes connection to the terminal it will not automatically disconnect when the scanner is disabled by calling Scanner.disable(). If this parameter is set the scanning driver will force the scanner to disconnect. Note: If this parameter is set to true, it will not fire the DISCONNECTED state.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IlluminationBrightness">
      <MemberSignature Language="C#" Value="public int IlluminationBrightness { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IlluminationBrightness" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
        <AssemblyVersion>1.0.3.1</AssemblyVersion>
        <AssemblyVersion>1.0.3.2</AssemblyVersion>
        <AssemblyVersion>2.0.0.1</AssemblyVersion>
        <AssemblyVersion>2.1.0.4</AssemblyVersion>
        <AssemblyVersion>2.1.0.5</AssemblyVersion>
        <AssemblyVersion>2.4.0.87</AssemblyVersion>
        <AssemblyVersion>2.5.0.41</AssemblyVersion>
        <AssemblyVersion>2.5.0.48</AssemblyVersion>
        <AssemblyVersion>2.6.0.69</AssemblyVersion>
        <AssemblyVersion>2.7.0.76</AssemblyVersion>
        <AssemblyVersion>3.0.0.41</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("illuminationBrightness")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Illumination Brightness of the Imager. The valid range is 1 to 10.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IlluminationMode">
      <MemberSignature Language="C#" Value="public Symbol.XamarinEMDK.Barcode.ScannerConfig.IlluminationMode IlluminationMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Symbol.XamarinEMDK.Barcode.ScannerConfig/IlluminationMode IlluminationMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.1</AssemblyVersion>
        <AssemblyVersion>2.1.0.4</AssemblyVersion>
        <AssemblyVersion>2.1.0.5</AssemblyVersion>
        <AssemblyVersion>2.4.0.87</AssemblyVersion>
        <AssemblyVersion>2.5.0.41</AssemblyVersion>
        <AssemblyVersion>2.5.0.48</AssemblyVersion>
        <AssemblyVersion>2.6.0.69</AssemblyVersion>
        <AssemblyVersion>2.7.0.76</AssemblyVersion>
        <AssemblyVersion>3.0.0.41</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("illuminationMode")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Symbol.XamarinEMDK.Barcode.ScannerConfig+IlluminationMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Turns imager illumination on and off.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Inverse1DMode">
      <MemberSignature Language="C#" Value="public Symbol.XamarinEMDK.Barcode.ScannerConfig.Inverse1DMode Inverse1DMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Symbol.XamarinEMDK.Barcode.ScannerConfig/Inverse1DMode Inverse1DMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
        <AssemblyVersion>1.0.3.1</AssemblyVersion>
        <AssemblyVersion>1.0.3.2</AssemblyVersion>
        <AssemblyVersion>2.0.0.1</AssemblyVersion>
        <AssemblyVersion>2.1.0.4</AssemblyVersion>
        <AssemblyVersion>2.1.0.5</AssemblyVersion>
        <AssemblyVersion>2.4.0.87</AssemblyVersion>
        <AssemblyVersion>2.5.0.41</AssemblyVersion>
        <AssemblyVersion>2.5.0.48</AssemblyVersion>
        <AssemblyVersion>2.6.0.69</AssemblyVersion>
        <AssemblyVersion>2.7.0.76</AssemblyVersion>
        <AssemblyVersion>3.0.0.41</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("inverse1DMode")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Symbol.XamarinEMDK.Barcode.ScannerConfig+Inverse1DMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This parameter allows the user to select decoding on inverse 1D bar codes. Use class ScannerConfig.Inverse1DMode.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LcdMode">
      <MemberSignature Language="C#" Value="public Symbol.XamarinEMDK.Barcode.ScannerConfig.LcdMode LcdMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Symbol.XamarinEMDK.Barcode.ScannerConfig/LcdMode LcdMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
        <AssemblyVersion>1.0.3.1</AssemblyVersion>
        <AssemblyVersion>1.0.3.2</AssemblyVersion>
        <AssemblyVersion>2.0.0.1</AssemblyVersion>
        <AssemblyVersion>2.1.0.4</AssemblyVersion>
        <AssemblyVersion>2.1.0.5</AssemblyVersion>
        <AssemblyVersion>2.4.0.87</AssemblyVersion>
        <AssemblyVersion>2.5.0.41</AssemblyVersion>
        <AssemblyVersion>2.5.0.48</AssemblyVersion>
        <AssemblyVersion>2.6.0.69</AssemblyVersion>
        <AssemblyVersion>2.7.0.76</AssemblyVersion>
        <AssemblyVersion>3.0.0.41</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("lcdMode")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Symbol.XamarinEMDK.Barcode.ScannerConfig+LcdMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Enables or disables LCD mode. LCD mode enhances the ability of the imager to read bar codes from LCD displays such as cellphones (imager only). Use class ScannerConfig.LcdMode.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LinearSecurityLevel">
      <MemberSignature Language="C#" Value="public Symbol.XamarinEMDK.Barcode.ScannerConfig.LinearSecurityLevel LinearSecurityLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Symbol.XamarinEMDK.Barcode.ScannerConfig/LinearSecurityLevel LinearSecurityLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
        <AssemblyVersion>1.0.3.1</AssemblyVersion>
        <AssemblyVersion>1.0.3.2</AssemblyVersion>
        <AssemblyVersion>2.0.0.1</AssemblyVersion>
        <AssemblyVersion>2.1.0.4</AssemblyVersion>
        <AssemblyVersion>2.1.0.5</AssemblyVersion>
        <AssemblyVersion>2.4.0.87</AssemblyVersion>
        <AssemblyVersion>2.5.0.41</AssemblyVersion>
        <AssemblyVersion>2.5.0.48</AssemblyVersion>
        <AssemblyVersion>2.6.0.69</AssemblyVersion>
        <AssemblyVersion>2.7.0.76</AssemblyVersion>
        <AssemblyVersion>3.0.0.41</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("linearSecurityLevel")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Symbol.XamarinEMDK.Barcode.ScannerConfig+LinearSecurityLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Sets the number of times a bar code is read to confirm an accurate decode. Use class ScannerConfig.LinearSecurityLevel.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OneDQuietZoneLevel">
      <MemberSignature Language="C#" Value="public Symbol.XamarinEMDK.Barcode.ScannerConfig.OneDQuietZoneLevel OneDQuietZoneLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Symbol.XamarinEMDK.Barcode.ScannerConfig/OneDQuietZoneLevel OneDQuietZoneLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.4.0.87</AssemblyVersion>
        <AssemblyVersion>2.5.0.41</AssemblyVersion>
        <AssemblyVersion>2.5.0.48</AssemblyVersion>
        <AssemblyVersion>2.6.0.69</AssemblyVersion>
        <AssemblyVersion>2.7.0.76</AssemblyVersion>
        <AssemblyVersion>3.0.0.41</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("oneDQuietZoneLevel")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Symbol.XamarinEMDK.Barcode.ScannerConfig+OneDQuietZoneLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This parameter sets the effort at which the decoder will attempt to decode margin-less barcodes. Behavior of the level set to this parameter will vary based on the margin-less decoder selected. Note: Higher margin-less levels will increase decoding times and the risk of decoding errors. Zebra therefore recommends enabling only the symbologies that require a higher margin-less level, and leaving all other symbologies at the default level of 1. Use enum ScannerConfig.OneDQuietZoneLevel.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PairAfterScannerReboot">
      <MemberSignature Language="C#" Value="public Symbol.XamarinEMDK.Barcode.ScannerConfig.PairAfterScannerReboot PairAfterScannerReboot { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Symbol.XamarinEMDK.Barcode.ScannerConfig/PairAfterScannerReboot PairAfterScannerReboot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.4.0.87</AssemblyVersion>
        <AssemblyVersion>2.5.0.41</AssemblyVersion>
        <AssemblyVersion>2.5.0.48</AssemblyVersion>
        <AssemblyVersion>2.6.0.69</AssemblyVersion>
        <AssemblyVersion>2.7.0.76</AssemblyVersion>
        <AssemblyVersion>3.0.0.41</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("pairAfterScannerReboot")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Symbol.XamarinEMDK.Barcode.ScannerConfig+PairAfterScannerReboot</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Enable/disable automatic reconnection after scanner reboot. Applicable to DS3678 Bluetooth scanner only. Use enum ScannerConfig.PairAfterScannerReboot.
</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PickList">
      <MemberSignature Language="C#" Value="public Symbol.XamarinEMDK.Barcode.ScannerConfig.PickList PickList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Symbol.XamarinEMDK.Barcode.ScannerConfig/PickList PickList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
        <AssemblyVersion>1.0.3.1</AssemblyVersion>
        <AssemblyVersion>1.0.3.2</AssemblyVersion>
        <AssemblyVersion>2.0.0.1</AssemblyVersion>
        <AssemblyVersion>2.1.0.4</AssemblyVersion>
        <AssemblyVersion>2.1.0.5</AssemblyVersion>
        <AssemblyVersion>2.4.0.87</AssemblyVersion>
        <AssemblyVersion>2.5.0.41</AssemblyVersion>
        <AssemblyVersion>2.5.0.48</AssemblyVersion>
        <AssemblyVersion>2.6.0.69</AssemblyVersion>
        <AssemblyVersion>2.7.0.76</AssemblyVersion>
        <AssemblyVersion>3.0.0.41</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("pickList")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Symbol.XamarinEMDK.Barcode.ScannerConfig+PickList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Allows the imager to decode only the bar code that is directly under the cross-hair/reticle (+) part of the pattern. This feature is useful in applications where multiple bar codes may appear in the field of view during a decode session and only one of them is targeted for decode. Use class ScannerConfig.PickList.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PicklistEx">
      <MemberSignature Language="C#" Value="public Symbol.XamarinEMDK.Barcode.ScannerConfig.PicklistEx PicklistEx { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Symbol.XamarinEMDK.Barcode.ScannerConfig/PicklistEx PicklistEx" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.4.0.87</AssemblyVersion>
        <AssemblyVersion>2.5.0.41</AssemblyVersion>
        <AssemblyVersion>2.5.0.48</AssemblyVersion>
        <AssemblyVersion>2.6.0.69</AssemblyVersion>
        <AssemblyVersion>2.7.0.76</AssemblyVersion>
        <AssemblyVersion>3.0.0.41</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("picklistEx")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Symbol.XamarinEMDK.Barcode.ScannerConfig+PicklistEx</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Allows the imager to decode only the barcode that is directly under the cross-hair/reticle (+) part of the pattern. This feature is useful in applications where multiple barcodes may appear in the field of view during a decode session and only one of them is targeted for decode. Use enum ScannerConfig.PicklistEx.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PoorQualityDecodeEffortLevel">
      <MemberSignature Language="C#" Value="public Symbol.XamarinEMDK.Barcode.ScannerConfig.PoorQualityDecodeEffortLevel PoorQualityDecodeEffortLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Symbol.XamarinEMDK.Barcode.ScannerConfig/PoorQualityDecodeEffortLevel PoorQualityDecodeEffortLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.4.0.87</AssemblyVersion>
        <AssemblyVersion>2.5.0.41</AssemblyVersion>
        <AssemblyVersion>2.5.0.48</AssemblyVersion>
        <AssemblyVersion>2.6.0.69</AssemblyVersion>
        <AssemblyVersion>2.7.0.76</AssemblyVersion>
        <AssemblyVersion>3.0.0.41</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("poorQualityDecodeEffortLevel")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Symbol.XamarinEMDK.Barcode.ScannerConfig+PoorQualityDecodeEffortLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This parameter permits selection of enhancement modes for decoding barcodes of poor or degraded quality. Use enum ScannerConfig.PoorQualityDecodeEffortLevel.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SameSymbolTimeout">
      <MemberSignature Language="C#" Value="public int SameSymbolTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SameSymbolTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.4.0.87</AssemblyVersion>
        <AssemblyVersion>2.5.0.41</AssemblyVersion>
        <AssemblyVersion>2.5.0.48</AssemblyVersion>
        <AssemblyVersion>2.6.0.69</AssemblyVersion>
        <AssemblyVersion>2.7.0.76</AssemblyVersion>
        <AssemblyVersion>3.0.0.41</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("sameSymbolTimeout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This setting is used to prevent the scanner driver from decoding the same symbol within this time interval. This is applicable only for the aim type ScannerConfig.AimType.CONTINUOUS_READ. Basically in the continuous mode the user can perform rapid scan and to prevent the user from decoding the same barcode twice user can set this value to an appropriate interval (in milliseconds). A value of 0 means no interval is required between two successive reads. Boundary values are 0 to 5000 in milliseconds in 500 increments such as 0, 500, 1000... etc</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScanMode">
      <MemberSignature Language="C#" Value="public Symbol.XamarinEMDK.Barcode.ScannerConfig.ScanMode ScanMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Symbol.XamarinEMDK.Barcode.ScannerConfig/ScanMode ScanMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.5.0.41</AssemblyVersion>
        <AssemblyVersion>2.5.0.48</AssemblyVersion>
        <AssemblyVersion>2.6.0.69</AssemblyVersion>
        <AssemblyVersion>2.7.0.76</AssemblyVersion>
        <AssemblyVersion>3.0.0.41</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("scanMode")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Symbol.XamarinEMDK.Barcode.ScannerConfig+ScanMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Sets the scan mode. This allows to select one type from the ScanMode enum.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
        <AssemblyVersion>1.0.3.1</AssemblyVersion>
        <AssemblyVersion>1.0.3.2</AssemblyVersion>
        <AssemblyVersion>2.0.0.1</AssemblyVersion>
        <AssemblyVersion>2.1.0.4</AssemblyVersion>
        <AssemblyVersion>2.1.0.5</AssemblyVersion>
        <AssemblyVersion>2.4.0.87</AssemblyVersion>
        <AssemblyVersion>2.5.0.41</AssemblyVersion>
        <AssemblyVersion>2.5.0.48</AssemblyVersion>
        <AssemblyVersion>2.6.0.69</AssemblyVersion>
        <AssemblyVersion>2.7.0.76</AssemblyVersion>
        <AssemblyVersion>3.0.0.41</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
        <AssemblyVersion>1.0.3.1</AssemblyVersion>
        <AssemblyVersion>1.0.3.2</AssemblyVersion>
        <AssemblyVersion>2.0.0.1</AssemblyVersion>
        <AssemblyVersion>2.1.0.4</AssemblyVersion>
        <AssemblyVersion>2.1.0.5</AssemblyVersion>
        <AssemblyVersion>2.4.0.87</AssemblyVersion>
        <AssemblyVersion>2.5.0.41</AssemblyVersion>
        <AssemblyVersion>2.5.0.48</AssemblyVersion>
        <AssemblyVersion>2.6.0.69</AssemblyVersion>
        <AssemblyVersion>2.7.0.76</AssemblyVersion>
        <AssemblyVersion>3.0.0.41</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
