<Type Name="ScanAndPairConfig" FullName="Symbol.XamarinEMDK.ScanAndPair.ScanAndPairConfig">
  <TypeSignature Language="C#" Value="public class ScanAndPairConfig : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ScanAndPairConfig extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Symbol.XamarinEMDK</AssemblyName>
    <AssemblyVersion>5.0.0.1</AssemblyVersion>
    <AssemblyVersion>6.0.0.51</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("com/symbol/emdk/scanandpair/ScanAndPairConfig", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Class provides a means of configuring the settings for use in scanAndPair() or scanAnUnpair() methods. Settings must be configured before calling the scanAndPair() or scanAnUnpair() methods. Do not modify while the method is processing its job.</summary>
    <remarks>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ScanAndPairConfig (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.1</AssemblyVersion>
        <AssemblyVersion>6.0.0.51</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">
        </param>
        <param name="transfer">
        </param>
        <summary>Class provides a means of configuring the settings for use in scanAndPair() or scanAnUnpair() methods. Settings must be configured before calling the scanAndPair() or scanAnUnpair() methods. Do not modify while the method is processing its job.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlwaysScan">
      <MemberSignature Language="C#" Value="public Java.Lang.Boolean AlwaysScan { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.Boolean AlwaysScan" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.1</AssemblyVersion>
        <AssemblyVersion>6.0.0.51</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("alwaysScan")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Class provides a means of configuring the settings for use in scanAndPair() or scanAnUnpair() methods. Settings must be configured before calling the scanAndPair() or scanAnUnpair() methods. Do not modify while the method is processing its job.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BluetoothInfo">
      <MemberSignature Language="C#" Value="public Symbol.XamarinEMDK.ScanAndPair.ScanAndPairConfig.BluetoothInformation BluetoothInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Symbol.XamarinEMDK.ScanAndPair.ScanAndPairConfig/BluetoothInformation BluetoothInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.1</AssemblyVersion>
        <AssemblyVersion>6.0.0.51</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("bluetoothInfo")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Symbol.XamarinEMDK.ScanAndPair.ScanAndPairConfig+BluetoothInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Class provides a means of configuring the settings for use in scanAndPair() or scanAnUnpair() methods. Settings must be configured before calling the scanAndPair() or scanAnUnpair() methods. Do not modify while the method is processing its job.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotificationType">
      <MemberSignature Language="C#" Value="public Symbol.XamarinEMDK.ScanAndPair.ScanAndPairConfig.NotificationTypes NotificationType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Symbol.XamarinEMDK.ScanAndPair.ScanAndPairConfig/NotificationTypes NotificationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.1</AssemblyVersion>
        <AssemblyVersion>6.0.0.51</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("notificationType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Symbol.XamarinEMDK.ScanAndPair.ScanAndPairConfig+NotificationTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Class provides a means of configuring the settings for use in scanAndPair() or scanAnUnpair() methods. Settings must be configured before calling the scanAndPair() or scanAnUnpair() methods. Do not modify while the method is processing its job.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetToDefaults">
      <MemberSignature Language="C#" Value="public virtual void ResetToDefaults ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetToDefaults() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.1</AssemblyVersion>
        <AssemblyVersion>6.0.0.51</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("resetToDefaults", "()V", "GetResetToDefaultsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Class provides a means of configuring the settings for use in scanAndPair() or scanAnUnpair() methods. Settings must be configured before calling the scanAndPair() or scanAnUnpair() methods. Do not modify while the method is processing its job.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScanInfo">
      <MemberSignature Language="C#" Value="public Symbol.XamarinEMDK.ScanAndPair.ScanAndPairConfig.ScanInformation ScanInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Symbol.XamarinEMDK.ScanAndPair.ScanAndPairConfig/ScanInformation ScanInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.1</AssemblyVersion>
        <AssemblyVersion>6.0.0.51</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("scanInfo")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Symbol.XamarinEMDK.ScanAndPair.ScanAndPairConfig+ScanInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Class provides a means of configuring the settings for use in scanAndPair() or scanAnUnpair() methods. Settings must be configured before calling the scanAndPair() or scanAnUnpair() methods. Do not modify while the method is processing its job.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.1</AssemblyVersion>
        <AssemblyVersion>6.0.0.51</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Class provides a means of configuring the settings for use in scanAndPair() or scanAnUnpair() methods. Settings must be configured before calling the scanAndPair() or scanAnUnpair() methods. Do not modify while the method is processing its job.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.1</AssemblyVersion>
        <AssemblyVersion>6.0.0.51</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Class provides a means of configuring the settings for use in scanAndPair() or scanAnUnpair() methods. Settings must be configured before calling the scanAndPair() or scanAnUnpair() methods. Do not modify while the method is processing its job.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
