<Type Name="SerialCommMgr" FullName="Symbol.XamarinEMDK.SerialComm.SerialCommMgr">
  <TypeSignature Language="C#" Value="public class SerialCommMgr : Symbol.XamarinEMDK.EMDKBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SerialCommMgr extends Symbol.XamarinEMDK.EMDKBase" />
  <AssemblyInfo>
    <AssemblyName>Symbol.XamarinEMDK</AssemblyName>
    <AssemblyVersion>2.4.0.87</AssemblyVersion>
    <AssemblyVersion>2.5.0.41</AssemblyVersion>
    <AssemblyVersion>2.5.0.48</AssemblyVersion>
    <AssemblyVersion>2.6.0.69</AssemblyVersion>
    <AssemblyVersion>2.7.0.76</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Symbol.XamarinEMDK.EMDKBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("com/symbol/emdk/serialcomm/SerialComm", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>This is the primary object to access the serial communication feature to communicate with remote device either via USB/Serial. This class design allows to communicate with only remote device at time.</summary>
    <remarks>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SerialCommMgr (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.4.0.87</AssemblyVersion>
        <AssemblyVersion>2.5.0.41</AssemblyVersion>
        <AssemblyVersion>2.5.0.48</AssemblyVersion>
        <AssemblyVersion>2.6.0.69</AssemblyVersion>
        <AssemblyVersion>2.7.0.76</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">
        </param>
        <param name="transfer">
        </param>
        <summary>
        </summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Config">
      <MemberSignature Language="C#" Value="public virtual Symbol.XamarinEMDK.SerialComm.SerialCommConfig Config { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Symbol.XamarinEMDK.SerialComm.SerialCommConfig Config" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.4.0.87</AssemblyVersion>
        <AssemblyVersion>2.5.0.41</AssemblyVersion>
        <AssemblyVersion>2.5.0.48</AssemblyVersion>
        <AssemblyVersion>2.6.0.69</AssemblyVersion>
        <AssemblyVersion>2.7.0.76</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getConfig", "()Lcom/symbol/emdk/serialcomm/SerialCommConfig;", "GetGetConfigHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setConfig", "(Lcom/symbol/emdk/serialcomm/SerialCommConfig;)V", "GetSetConfig_Lcom_symbol_emdk_serialcomm_SerialCommConfig_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Symbol.XamarinEMDK.SerialComm.SerialCommConfig</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current configuration settings of serial comm channel. If modifications are made to the returned SerialCommConfig object, the SerialComm.setConfig(SerialCommConfig) must be called to take effect. SerialComm object must be enabled before calling getConfig() and setConfig() methods.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultPortName">
      <MemberSignature Language="C#" Value="public const string DefaultPortName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultPortName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.6.0.69</AssemblyVersion>
        <AssemblyVersion>2.7.0.76</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DEFAULT_PORT_NAME")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Disable">
      <MemberSignature Language="C#" Value="public virtual void Disable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Disable() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.4.0.87</AssemblyVersion>
        <AssemblyVersion>2.5.0.41</AssemblyVersion>
        <AssemblyVersion>2.5.0.48</AssemblyVersion>
        <AssemblyVersion>2.6.0.69</AssemblyVersion>
        <AssemblyVersion>2.7.0.76</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("disable", "()V", "GetDisableHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This method disables USB/serial channel to communicate with the remote device.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enable">
      <MemberSignature Language="C#" Value="public virtual void Enable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Enable() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.4.0.87</AssemblyVersion>
        <AssemblyVersion>2.5.0.41</AssemblyVersion>
        <AssemblyVersion>2.5.0.48</AssemblyVersion>
        <AssemblyVersion>2.6.0.69</AssemblyVersion>
        <AssemblyVersion>2.7.0.76</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("enable", "()V", "GetEnableHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This method enables the channel for the application to communicate with the remote device via USB/Serial.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSignalState">
      <MemberSignature Language="C#" Value="public virtual bool GetSignalState (Symbol.XamarinEMDK.SerialComm.SerialCommMgr.ControlSignal p0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetSignalState(class Symbol.XamarinEMDK.SerialComm.SerialCommMgr/ControlSignal p0) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.4.0.87</AssemblyVersion>
        <AssemblyVersion>2.5.0.41</AssemblyVersion>
        <AssemblyVersion>2.5.0.48</AssemblyVersion>
        <AssemblyVersion>2.6.0.69</AssemblyVersion>
        <AssemblyVersion>2.7.0.76</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getSignalState", "(Lcom/symbol/emdk/serialcomm/SerialComm$ControlSignal;)Z", "GetGetSignalState_Lcom_symbol_emdk_serialcomm_SerialComm_ControlSignal_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="Symbol.XamarinEMDK.SerialComm.SerialCommMgr+ControlSignal" />
      </Parameters>
      <Docs>
        <param name="p0">signal</param>
        <summary>This method can be used to query the signal status of DTR, DCD, DSR, RI, RTS, CTS.</summary>
        <returns>
        </returns>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public virtual bool IsEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.4.0.87</AssemblyVersion>
        <AssemblyVersion>2.5.0.41</AssemblyVersion>
        <AssemblyVersion>2.5.0.48</AssemblyVersion>
        <AssemblyVersion>2.6.0.69</AssemblyVersion>
        <AssemblyVersion>2.7.0.76</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isEnabled", "()Z", "GetIsEnabledHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether the communication port is enabled or not.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PortInfo">
      <MemberSignature Language="C#" Value="public virtual Symbol.XamarinEMDK.SerialComm.SerialPortInfo PortInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Symbol.XamarinEMDK.SerialComm.SerialPortInfo PortInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.4.0.87</AssemblyVersion>
        <AssemblyVersion>2.5.0.41</AssemblyVersion>
        <AssemblyVersion>2.5.0.48</AssemblyVersion>
        <AssemblyVersion>2.6.0.69</AssemblyVersion>
        <AssemblyVersion>2.7.0.76</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPortInfo", "()Lcom/symbol/emdk/serialcomm/SerialPortInfo;", "GetGetPortInfoHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Symbol.XamarinEMDK.SerialComm.SerialPortInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the serial port info used for communication. If the method is not supported on any device, it returns empty value.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual byte[] Read (int p0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] Read(int32 p0) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.4.0.87</AssemblyVersion>
        <AssemblyVersion>2.5.0.41</AssemblyVersion>
        <AssemblyVersion>2.5.0.48</AssemblyVersion>
        <AssemblyVersion>2.6.0.69</AssemblyVersion>
        <AssemblyVersion>2.7.0.76</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("read", "(I)[B", "GetRead_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="p0">readTimeOut - Wait for data until timeout. The timeout unit is milli seconds. A timeout of zero means the calling read will wait forever unless interrupted by disable or release.</param>
        <summary>This method reads the available data and returns immediately. If no data is available, waits till the timeout occurs. Null will be returned if there is no data available. Exception will be thrown in case of any errors. The maximum data can be received is 4096 Bytes at a time. The newly arrived data will be lost if the received data in the read buffer is greater 4096 byes when the data arrives from the remote devices client. The application must handshake with remote device's client to avoid the data loss. This is synchronous method, depending on the read timeout, it may block the application's main thread and might lead to ANR. The application should call this method on a separate thread to avoid the ANR problems.</summary>
        <returns>
        </returns>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSignalState">
      <MemberSignature Language="C#" Value="public virtual void SetSignalState (Symbol.XamarinEMDK.SerialComm.SerialCommMgr.ControlSignal p0, bool p1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSignalState(class Symbol.XamarinEMDK.SerialComm.SerialCommMgr/ControlSignal p0, bool p1) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.4.0.87</AssemblyVersion>
        <AssemblyVersion>2.5.0.41</AssemblyVersion>
        <AssemblyVersion>2.5.0.48</AssemblyVersion>
        <AssemblyVersion>2.6.0.69</AssemblyVersion>
        <AssemblyVersion>2.7.0.76</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setSignalState", "(Lcom/symbol/emdk/serialcomm/SerialComm$ControlSignal;Z)V", "GetSetSignalState_Lcom_symbol_emdk_serialcomm_SerialComm_ControlSignal_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="Symbol.XamarinEMDK.SerialComm.SerialCommMgr+ControlSignal" />
        <Parameter Name="p1" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="p0">controlSignal - Control Signal Type</param>
        <param name="p1">signalStatus - Status of the control signal</param>
        <summary>This method allows the application to set the status of control signal. Only the RTS, DTR are allowed set. For other it should return error as read only.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.4.0.87</AssemblyVersion>
        <AssemblyVersion>2.5.0.41</AssemblyVersion>
        <AssemblyVersion>2.5.0.48</AssemblyVersion>
        <AssemblyVersion>2.6.0.69</AssemblyVersion>
        <AssemblyVersion>2.7.0.76</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.4.0.87</AssemblyVersion>
        <AssemblyVersion>2.5.0.41</AssemblyVersion>
        <AssemblyVersion>2.5.0.48</AssemblyVersion>
        <AssemblyVersion>2.6.0.69</AssemblyVersion>
        <AssemblyVersion>2.7.0.76</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual int Write (byte[] p0, int p1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Write(unsigned int8[] p0, int32 p1) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.4.0.87</AssemblyVersion>
        <AssemblyVersion>2.5.0.41</AssemblyVersion>
        <AssemblyVersion>2.5.0.48</AssemblyVersion>
        <AssemblyVersion>2.6.0.69</AssemblyVersion>
        <AssemblyVersion>2.7.0.76</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("write", "([BI)I", "GetWrite_arrayBIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.Byte[]" />
        <Parameter Name="p1" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="p0">data - The byte array that contains the data to write.</param>
        <param name="p1">bytesToWrite - The number of bytes to write.</param>
        <summary>Writes a specified number of bytes from buffer to the opened communication channel. This method returns the numbers bytes written. Exception will be thrown in case of any errors. This is synchronous call and may block the main thread depending on the time taken to send the data to the remote device. The maximum number of bytes to written at a time can't exceed more than 4096 Bytes and if the application passes more will lead to error.</summary>
        <returns>
        </returns>
        <remarks>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
