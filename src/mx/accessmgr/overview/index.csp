---
csp: accessmgr
title: Overview
type: text
devicetype: A
order: 0
---

The Access Manager (AccessMgr) enables an admin to configure a device to control which user or "installable" application(s) can be used on the device and what actions the application(s) can perform. 

A key feature of AccessMgr is the ability to enable and disable "whitelisting," a process that allows only those applications explicitly specified in a list to run. **Whitelisting is disabled by default** and imposes no restrictions. When whitelisting is turned on, various restrictions can be applied using AccessMgr. Applications ***NOT*** included in the "whitelist" are prevented from running. AccessMgr allows whitelist applications to be installed, launched and maintained, and can control which applications are allowed to submit XML for all CSPs, including AccessMgr itself.

**Whitelisting applies only to user applications**; it has no effect on System applications, which come preinstalled on the device. To control aspects of System applications, see [AppMgr](/mx/appmgr). Whitelisting can be used to control whether a device user is allowed to install a user application, but cannot control whether an application can be installed programmatically by using AppMgr. Whitelisting also can be used to control whether a user application can be launched (by any means) once it is installed. AccessMgr also provides the option to control whether the device user can access a full or reduced version of the Android Settings panel.

>**`IMPORTANT:`** If an app uses AccessMgr to enable whitelisting, the app itself becomes subject to whitelisting and is prevented from running if it fails to add itself to the whitelist. Also, if such an app does not explicitly allow itself to submit XML, it would be unable to alter that configuration, once successfully applied. 

### Signature Files

Signature files can be used by Access Manager to provide added levels of application security, including control over approving apps to run and permission to add apps (or one or more of an app's functions) to a [Function Group](#group-access-action).

To understand how to obtain an app signature, please see the [SigTools sample app](/emdk-for-android/latest/samples/sigtools).

### Main Functionality

* **Turn On/Off**: 
 * App whitelisting
 * Verification of app signatures
 * Auto-approve/unapprove app access Protected CSPs
 * Auto-approve/unapprove app access Protected Function Groups
* **Perform Protected Function Groups Actions**:
 * Create
 * Delete
 * Approve
 * Unapprove
 * Protect
 * Unprotect
* **Set Permission Access Actions**: 
 * Allow
 * Deny
 * Allow Device User to Choose
* **Allow Access to**:
 * Notifications
 * App usage statistics 
 * System Alert Window 
 * App Ops Statistics
 * Battery Statistics
* Manage the "whitelist" of applications that a device user can install and launch
* Control which applications are allowed to submit XML
* Select whether the device user can access Full or Reduced Settings
* Set Application Verification Mode to Verify All App Signatures
* **Allow, disallow and verify**: 
 * Service binding
 * Calls to a service
* Create, delete, protect and verify Function Groups
* Designate CSPs on a device as "Protected" from access by apps
* Approve apps for accessing CSPs designated as Protected

-----

<!--
OLD OLD OLD (above)

from SN PMB:
* **[Enhanced Access Manager](/mx/csp/access)** provides the ability to emulate device user interactions, allowing key events and touch events to be "injected" into the system by an otherwise unprivileged (not platform key-signed) application. 

* **[Enhanced Access Manager](/mx/csp/access)**  exposes following methods to control which packages are allowed access to key and touch injection with: Service Access Action

 * Allow Binding to Service
 * Disallow Binding to Service
 * Verify if Binding to service is allowed
 * Allow Caller to Call service
 * Disallow Caller from Calling service
 * Verify Caller is allowed to Call Service
 * Designate CSPs on a device as "Protected" from access by apps
 * Approve apps for accessing CSPs designated as Protected

* **[Enhanced File Manager](/mx/csp/file)** CSP to provide ability to Download and expand Archive files by
 * Selecting a compressed file from the local machine
 * Entering the location of a compressed file on an external server

-->
