---
csp: datawedgemgr
title: Configuration File
type: parm
order: 6
mx: "9.2"
info: Supported only on devices with DataWedge 7.6 or later.
devicetype: A
parm:
  pivotal: No
  name: ConfigurationFile
  type: string
---

Used to enter the name of a file on the device containing configuration settings to import into DataWedge. 

**Input value rules**: 

* String from 0&ndash;255 characters containing name of configuration file on the device

DataWedge supports the importation of Config files (`datawedge.db`) and Profiles (`dwprofile_profilename.db`) to devices delivered through commercially available Enterprise Mobility Management (EMM) systems. 

**Zebra recommends copying any configuration files to the** `/enterprise/device/settings/datawedge/autoimport` **folder *prior* to calling DataWedgeMgr** with the configuration file and path. When DataWedge launches, it checks this folder and executes the following functions if files are present:

1. Import the new file(s)
2. Replace the existing Config file and like-named Profile(s), if any
3. Delete the imported files
4. Put new settings immediately into effect

##### Important Notes:
* For the best user experience, **Zebra strongly recommends that device users be advised to <u>exit any DataWedge configuration UI screen</u>** before new Config files are remotely deployed.
* **Zebra recommends applying explicit file permissions to all `.db` files** so that DataWedge file procedures are not impeded.

<!-- 10/8/19- removed; this CSP requires Android 7.6 
* **On devices running Android KitKat or later**, the `/enterprise` folder cannot be seen with File Explorer or other user-level tools. Moving configuration files to and from the `/autoimport` or `/enterprisereset` folders must be done programmatically, or with a staging client app or EMM. 

3/26/20- removed per eng: 
* **DataWedge versions prior to 6.9** attempt to consume any of the monitored “`.db`” files as soon the file name(s) appear in the `/autoimport` folder. Therefore, **it is possible for DataWedge to attempt to consume a file before it is completely written**. To avoid this condition, **Zebra recommends initially storing the file with an alternate extension** (i.e. "`.tmp`") and changing the extension to `.db` once writing is complete.


-->
